class Score {
    field Array digits;
    field Array digitsRigidBodies;
    field bool hasMaxScore;

    constructor Score new(){
        let hasMaxScore = false;
        do initializeDigitsTable();
        do initializeDigitsRigidBodies();
        do Sprites.drawScoreText(7316); // x = 352, y = 228
        do drawDigits();
        return this;
    }

    method void initializeDigitsTable(){
        var int i;
        let digits = Array.new(4);
        let i = 0;
        while (i < 4){
            let digits[i] = 0;
            let i = i + 1;
        }
        return;
    }

    method void initializeDigitsRigidBodies(){
        let digitsRigidBodies = Array.new(4);
        let digitsRigidBodies[0] = RigidBody.new(384, 228, 24, 24);
        let digitsRigidBodies[1] = RigidBody.new(416, 228, 24, 24);
        let digitsRigidBodies[2] = RigidBody.new(448, 228, 24, 24);
        let digitsRigidBodies[3] = RigidBody.new(480, 228, 24, 24);
        return;
    }

    method void addPoints(int points){
        var int integerPart;
        var int sum;
        var int i;
        var int digit; 
        if (hasMaxScore){
            return;
        }
        let i = 0;
        let sum = 0;
        let integerPart = points;
        while (i < 4) {
            let digit = digits[i];
            let sum = digit + integerPart;
            let integerPart = sum / 10;
            let digits[i] = -(integerPart * 10) + sum;
            let i = i + 1;
        }
        if (integerPart > 0){
            let hasMaxScore = true;
        }
        do drawDigits();
        return;
    }

    method void drawDigits() {
        var int i;
        var int location;
        let i = 0;
        while (i < 4) {
            do ClearScreenArea.ClearScreenArea(digitsRigidBodies[i]);
            let location = Location.getDrawingLocation(digitsRigidBodies[i]);
            if (digits[i] = 0) {
                do Sprites.drawDigitZero(location);
            }
            if (digits[i] = 1) {
                do Sprites.drawDigitOne(location);
            }
            if (digits[i] = 2) {
                do Sprites.drawDigitTwo(location);
            }
            if (digits[i] = 3) {
                do Sprites.drawDigitThree(location);
            }
            if (digits[i] = 4) {
                do Sprites.drawDigitFour(location);
            }
            if (digits[i] = 5) {
                do Sprites.drawDigitFive(location);
            }
            if (digits[i] = 6) {
                do Sprites.drawDigitSix(location);
            }
            if (digits[i] = 7) {
                do Sprites.drawDigitSeven(location);
            }
            if (digits[i] = 8) {
                do Sprites.drawDigitEight(location);
            }
            if (digits[i] = 9) {
                do Sprites.drawDigitNine(location);
            }
            let i = i + 1;
        }
        return;
    }

    method void dispose() {
        var int i;
        var RigidBody rb;
        let i = 0;
        while (i < 4) {
            let rb = digitsRigidBodies[i];
            do rb.dispose();
        }
        do digits.dispose();
        do digitsRigidBodies.dispose();
        do Memmory.deAlloc(this);
        return;
    }
}