class Health {
    field int heartsCount;
    field Array heartsRigidBodies;

    constructor Health new(){
        let heartsCount = 3;
        do Sprites.drawLivesText(7297); // x = 16, y = 228
        do initializeHeartsRigidBodies();
        do drawHearts();
        return this;
    }

    method bool isGameOver() {
        if (heartsCount = 0) {
            return true;
        }
        else {
            return false;
        }
    }

    method void initializeHeartsRigidBodies(){
        let heartsRigidBodies = Array.new(heartsCount);
        let heartsRigidBodies[0] = RigidBody.new(80, 228, 24, 24);
        let heartsRigidBodies[1] = RigidBody.new(112, 228, 24, 24);
        let heartsRigidBodies[2] = RigidBody.new(144, 228, 24, 24);
        return;
    }

    method void drawHearts() {
        var RigidBody rb;
        var int location;
        var int i;
        let i = 0;
        do Screen.setColor(false);
        do Screen.drawRectangle(80, 228, 176, 252);
        do Screen.setColor(true);

        while (i < heartsCount) {
            let rb = heartsRigidBodies[i];
            let location = Location.getDrawingLocation(rb);
            do Sprites.drawHeart(location);
            let i = i + 1;
        }
        return;
    }

    method void takeDamage() {
        let heartsCount = heartsCount - 1;
        do drawHearts();
        return;
    }

    method void dispose() {
        var int i;
        var RigetBody rb;
        let i = 0;
        while (i < 3) {
            let rb = heartsRigidBodies[i];
            do rb.dispose();
            let i = i + 1;
        }
        do heartsRigidBodies.dispose();
        do Memmory.deAlloc(this);
        return;
    }
}