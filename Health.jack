class Health {
    field int heartsCount;
    field Array heartsRigidBodies;

    constructor Health new(){
        let heartsCount = 3;
        do Sprites.drawLivesText(7296); // x = 4, y = 228
        do initializeHeartsRigidBodies();
        do drawHearts();
        return this;
    }

    method bool isGameOver() {
        return heartsCount = 0;
    }

    method void initializeHeartsRigidBodies(){
        let heartsRigidBodies = Array.new(heartsCount);
        let heartsRigidBodies[0] = RigidBody.new(76, 228, 24, 24);
        let heartsRigidBodies[1] = RigidBody.new(100, 228, 24, 24);
        let heartsRigidBodies[2] = RigidBody.new(124, 228, 24, 24);
        return;
    }

    method void drawHearts() {
        var int location;
        var int i;
        let i = 0;
        while (i < heartsCount) {
            do ClearScreenArea.ClearScreenArea(heartsRigidBodies[i]);
            let location = Location.getDrawingLocation(heartsRigidBodies[i]);
            do Sprites.drawHeart(location);
            let i = i + 1;
        }
        return;
    }

    method void takeDamage() {
        let heartsCount = heartsCount - 1;
        do drawHearts();
        return;
    }

    method void dispose() {
        var int i;
        var RigetBody rb;
        let i = 0;
        while (i < 3) {
            let rb = heartsRigidBodies[i];
            do rb.dispose();
            let i = i + 1;
        }
        do heartsRigidBodies.dispose();
        do Memmory.deAlloc(this);
        return;
    }
}